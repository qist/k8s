apiVersion: v1
data: {}
kind: Secret
metadata:
  name: additional-configs
  namespace: monitoring
stringData:
  prometheus-additional.yaml: |-
     - job_name: istio-mesh
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: endpoints
         namespaces:
           names:
           - istio-system
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
         separator: ;
         regex: istio-telemetry;prometheus
         replacement: $1
         action: keep
     - job_name: envoy-stats
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /stats/prometheus
       scheme: http
       kubernetes_sd_configs:
       - role: pod
       relabel_configs:
       - source_labels: [__meta_kubernetes_pod_container_port_name]
         separator: ;
         regex: .*-envoy-prom
         replacement: $1
         action: keep
       - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
         separator: ;
         regex: ([^:]+)(?::\d+)?;(\d+)
         target_label: __address__
         replacement: $1:15090
         action: replace
       - separator: ;
         regex: __meta_kubernetes_pod_label_(.+)
         replacement: $1
         action: labelmap
       - source_labels: [__meta_kubernetes_namespace]
         separator: ;
         regex: (.*)
         target_label: namespace
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_pod_name]
         separator: ;
         regex: (.*)
         target_label: pod_name
         replacement: $1
         action: replace
     - job_name: istio-policy
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: endpoints
         namespaces:
           names:
           - istio-system
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
         separator: ;
         regex: istio-policy;http-monitoring
         replacement: $1
         action: keep
     - job_name: istio-telemetry
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: endpoints
         namespaces:
           names:
           - istio-system
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
         separator: ;
         regex: istio-telemetry;http-monitoring
         replacement: $1
         action: keep
     - job_name: pilot
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: endpoints
         namespaces:
           names:
           - istio-system
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
         separator: ;
         regex: istio-pilot;http-monitoring
         replacement: $1
         action: keep
     - job_name: galley
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: endpoints
         namespaces:
           names:
           - istio-system
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
         separator: ;
         regex: istio-galley;http-monitoring
         replacement: $1
         action: keep
     - job_name: citadel
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: endpoints
         namespaces:
           names:
           - istio-system
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
         separator: ;
         regex: istio-citadel;http-monitoring
         replacement: $1
         action: keep
     - job_name: kubernetes-endpoints
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: endpoints
       bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
       tls_config:
         ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
         insecure_skip_verify: true
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
         separator: ;
         regex: "true"
         replacement: $1
         action: keep
       - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
         separator: ;
         regex: (https?)
         target_label: __scheme__
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
         separator: ;
         regex: (.+)
         target_label: __metrics_path__
         replacement: $1
         action: replace
       - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
         separator: ;
         regex: ([^:]+)(?::\d+)?;(\d+)
         target_label: __address__
         replacement: $1:$2
         action: replace
       - separator: ;
         regex: __meta_kubernetes_service_label_(.+)
         replacement: $1
         action: labelmap
       - source_labels: [__meta_kubernetes_namespace]
         separator: ;
         regex: (.*)
         target_label: namespace
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_service_name]
         separator: ;
         regex: (.*)
         target_label: service
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_service_name]
         separator: ;
         regex: (.*)
         target_label: job
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_pod_name]
         separator: ;
         regex: (.*)
         target_label: pod
         replacement: $1
         action: replace
     - job_name: kubernetes-services
       honor_timestamps: true
       params:
         module:
         - http_2xx
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /probe
       scheme: http
       kubernetes_sd_configs:
       - role: service
       relabel_configs:
       - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
         separator: ;
         regex: "true"
         replacement: $1
         action: keep
       - source_labels: [__address__]
         separator: ;
         regex: (.*)
         target_label: __param_target
         replacement: $1
         action: replace
       - separator: ;
         regex: (.*)
         target_label: __address__
         replacement: blackbox-exporter.monitoring
         action: replace
       - source_labels: [__param_target]
         separator: ;
         regex: (.*)
         target_label: instance
         replacement: $1
         action: replace
       - separator: ;
         regex: __meta_kubernetes_service_label_(.+)
         replacement: $1
         action: labelmap
       - source_labels: [__meta_kubernetes_namespace]
         separator: ;
         regex: (.*)
         target_label: namespace
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_service_name]
         separator: ;
         regex: (.*)
         target_label: service
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_service_name]
         separator: ;
         regex: (.*)
         target_label: job
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_pod_name]
         separator: ;
         regex: (.*)
         target_label: pod
         replacement: $1
         action: replace
     - job_name: 'kubernetes-ingresses'
       metrics_path: /probe
       params:
         module: [http_2xx]
       kubernetes_sd_configs:
       - role: ingress
       relabel_configs:
       # Example relabel to probe only some ingresses that have "prometheus.io/probed = true" annotation
       - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probed]
         separator: ;
         regex: true
         replacement: $1
         action: keep         
       - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
         separator: ;
         regex: (.+);(.+);(.+)
         replacement: ${1}://${2}${3}
         target_label: __param_target
       - target_label: __address__
         replacement: blackbox-exporter.monitoring
       - source_labels: [__param_target]
         separator: ;
         target_label: instance
       - action: labelmap
         regex: __meta_kubernetes_ingress_label_(.+)
       - source_labels: [__meta_kubernetes_namespace]
         separator: ;
         target_label: namespace
       - source_labels: [__meta_kubernetes_ingress_name]
         separator: ;
         target_label: service
     - job_name: kubernetes-pods
       honor_timestamps: true
       scrape_interval: 10s
       scrape_timeout: 10s
       metrics_path: /metrics
       scheme: http
       kubernetes_sd_configs:
       - role: pod
       relabel_configs:
       - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
         separator: ;
         regex: "true"
         replacement: $1
         action: keep
       - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
         separator: ;
         regex: (.+)
         target_label: __metrics_path__
         replacement: $1
         action: replace
       - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
         separator: ;
         regex: ([^:]+)(?::\d+)?;(\d+)
         target_label: __address__
         replacement: $1:$2
         action: replace
       - separator: ;
         regex: __meta_kubernetes_pod_label_(.+)
         replacement: $1
         action: labelmap
       - source_labels: [__meta_kubernetes_namespace]
         separator: ;
         regex: (.*)
         target_label: namespace
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_pod_name]
         separator: ;
         regex: (.*)
         target_label: pod
         replacement: $1
         action: replace
       - source_labels: [__meta_kubernetes_pod_container_name]
         separator: ;
         regex: (.*)
         target_label: job
         replacement: $1
         action: replace
     #- job_name: kubernetes-pods-istio-secure
     #  honor_timestamps: true
     #  scrape_interval: 10s
     #  scrape_timeout: 10s
     #  metrics_path: /metrics
     #  scheme: https
     #  kubernetes_sd_configs:
     #  - role: pod
     #  tls_config:
     #    ca_file: /etc/prometheus/secrets/istio-certs/root-cert.pem
     #    cert_file: /etc/prometheus/secrets/istio-certs/cert-chain.pem
     #    key_file: /etc/prometheus/secrets/istio-certs/key.pem
     #    insecure_skip_verify: true
     #  relabel_configs:
     #  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
     #    separator: ;
     #    regex: "true"
     #    replacement: $1
     #    action: keep
     #  - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]
     #    separator: ;
     #    regex: (([^;]+);([^;]*))|(([^;]*);(true))
     #    replacement: $1
     #    action: keep
     #  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
     #    separator: ;
     #    regex: (http)
     #    replacement: $1
     #    action: drop
     #  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
     #    separator: ;
     #    regex: (.+)
     #    target_label: __metrics_path__
     #    replacement: $1
     #    action: replace
     #  - source_labels: [__address__]
     #    separator: ;
     #    regex: ([^:]+):(\d+)
     #    replacement: $1
     #    action: keep
     #  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
     #    separator: ;
     #    regex: ([^:]+)(?::\d+)?;(\d+)
     #    target_label: __address__
     #    replacement: $1:$2
     #    action: replace
     #  - separator: ;
     #    regex: __meta_kubernetes_pod_label_(.+)
     #    replacement: $1
     #    action: labelmap
     #  - source_labels: [__meta_kubernetes_namespace]
     #    separator: ;
     #    regex: (.*)
     #    target_label: namespace
     #    replacement: $1
     #    action: replace
     #  - source_labels: [__meta_kubernetes_pod_name]
     #    separator: ;
     #    regex: (.*)
     #    target_label: pod_name
     #    replacement: $1
     #    action: replace    
     #- job_name: 'blackbox'
     #  metrics_path: /probe
     #  params:
     #    module: [http_2xx]  # Look for a HTTP 200 response.
     #  file_sd_configs:
     #    - files:
     #      - /etc/prometheus/configmaps/prometheus-files-discover/*.yaml
     #      refresh_interval: 10s
     #  relabel_configs:
     #    - source_labels: [__address__]
     #      target_label: __param_target
     #    - source_labels: [__param_target]
     #      target_label: instance
     #    - target_label: __address__
     #      replacement: blackbox-exporter.monitoring  # The blackbox exporter's real hostname:port.         
type: Opaque
